{"version":3,"sources":["webpack:///./src/pages/contact/index.js"],"names":["Index","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","data","form","fetch","method","headers","body","getAttribute","state","Object","keys","map","key","encodeURIComponent","join","then","navigate","catch","error","alert","isValidated","render","className","action","data-netlify","data-netlify-honeypot","onSubmit","this","type","hidden","onChange","htmlFor","id","required","React","Component"],"mappings":"2PAUqBA,E,oBACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAIFC,aAAe,SAACC,GAAO,IAAD,EACpB,EAAKC,WAAL,MAAiBD,EAAEE,OAAOC,MAAOH,EAAEE,OAAOE,MAA1C,KANiB,EASnBC,aAAe,SAACL,GACdA,EAAEM,iBACF,IAlBYC,EAkBNC,EAAOR,EAAEE,OACfO,MAAM,IAAK,CACTC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BC,MAtBUL,EAsBG,OAAD,QACV,YAAaC,EAAKK,aAAa,SAC5B,EAAKC,OAvBPC,OAAOC,KAAKT,GAChBU,KAAI,SAACC,GAAD,OAASC,mBAAmBD,GAAO,IAAMC,mBAAmBZ,EAAKW,OACrEE,KAAK,QAwBHC,MAAK,kBAAMC,mBAASd,EAAKK,aAAa,cACtCU,OAAM,SAACC,GAAD,OAAWC,MAAMD,OAnB1B,EAAKV,MAAQ,CAAEY,aAAa,GAFX,E,0GAwBnBC,OAAA,WACE,OACE,kBAAC,IAAD,KACE,6BAASC,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,mHACA,uCACA,0BACEzB,KAAK,UACLO,OAAO,OACPmB,OAAO,mBACPC,eAAa,OACbC,wBAAsB,YACtBC,SAAUC,KAAK5B,cAGf,2BAAO6B,KAAK,SAAS/B,KAAK,YAAYC,MAAM,YAC5C,yBAAK+B,QAAM,GACT,sDACuB,IACrB,2BAAOhC,KAAK,YAAYiC,SAAUH,KAAKlC,iBAG3C,yBAAK6B,UAAU,SACb,2BAAOA,UAAU,QAAQS,QAAS,QAAlC,aAGA,yBAAKT,UAAU,WACb,2BACEA,UAAU,QACVM,KAAM,OACN/B,KAAM,OACNiC,SAAUH,KAAKlC,aACfuC,GAAI,OACJC,UAAU,MAIhB,yBAAKX,UAAU,SACb,2BAAOA,UAAU,QAAQS,QAAS,SAAlC,SAGA,yBAAKT,UAAU,WACb,2BACEA,UAAU,QACVM,KAAM,QACN/B,KAAM,QACNiC,SAAUH,KAAKlC,aACfuC,GAAI,QACJC,UAAU,MAIhB,yBAAKX,UAAU,SACb,2BAAOA,UAAU,QAAQS,QAAS,WAAlC,WAGA,yBAAKT,UAAU,WACb,8BACEA,UAAU,WACVzB,KAAM,UACNiC,SAAUH,KAAKlC,aACfuC,GAAI,UACJC,UAAU,MAIhB,yBAAKX,UAAU,SACb,4BAAQA,UAAU,iBAAiBM,KAAK,UAAxC,e,GA9FiBM,IAAMC","file":"component---src-pages-contact-index-js-0a5b8e5a92bf2337ea4e.js","sourcesContent":["import React from 'react'\r\nimport { navigate } from 'gatsby-link'\r\nimport Layout from '../../components/Layout'\r\n\r\nfunction encode(data) {\r\n  return Object.keys(data)\r\n    .map((key) => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\r\n    .join('&')\r\n}\r\n\r\nexport default class Index extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { isValidated: false }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const form = e.target\r\n    fetch('/', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n      body: encode({\r\n        'form-name': form.getAttribute('name'),\r\n        ...this.state,\r\n      }),\r\n    })\r\n      .then(() => navigate(form.getAttribute('action')))\r\n      .catch((error) => alert(error))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <section className=\"section\">\r\n          <div className=\"container\">\r\n            <div className=\"content\">\r\n              <div>Please get in touch and we can answer any questions or set up in the WeChat group.</div>\r\n              <h1>Contact</h1>\r\n              <form\r\n                name=\"contact\"\r\n                method=\"post\"\r\n                action=\"/contact/thanks/\"\r\n                data-netlify=\"true\"\r\n                data-netlify-honeypot=\"bot-field\"\r\n                onSubmit={this.handleSubmit}\r\n              >\r\n                {/* The `form-name` hidden field is required to support form submissions without JavaScript */}\r\n                <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\r\n                <div hidden>\r\n                  <label>\r\n                    Donâ€™t fill this out:{' '}\r\n                    <input name=\"bot-field\" onChange={this.handleChange} />\r\n                  </label>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label className=\"label\" htmlFor={'name'}>\r\n                    Your name\r\n                  </label>\r\n                  <div className=\"control\">\r\n                    <input\r\n                      className=\"input\"\r\n                      type={'text'}\r\n                      name={'name'}\r\n                      onChange={this.handleChange}\r\n                      id={'name'}\r\n                      required={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label className=\"label\" htmlFor={'email'}>\r\n                    Email\r\n                  </label>\r\n                  <div className=\"control\">\r\n                    <input\r\n                      className=\"input\"\r\n                      type={'email'}\r\n                      name={'email'}\r\n                      onChange={this.handleChange}\r\n                      id={'email'}\r\n                      required={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label className=\"label\" htmlFor={'message'}>\r\n                    Message\r\n                  </label>\r\n                  <div className=\"control\">\r\n                    <textarea\r\n                      className=\"textarea\"\r\n                      name={'message'}\r\n                      onChange={this.handleChange}\r\n                      id={'message'}\r\n                      required={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <button className=\"button is-link\" type=\"submit\">\r\n                    Send\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}