{"version":3,"sources":["webpack:///./src/templates/training-page.js","webpack:///./src/components/Content.js"],"names":["TrainingPageTemplate","image","title","heading","content","description","PageContent","contentComponent","Content","className","style","backgroundImage","childImageSharp","fluid","src","backgroundPosition","boxShadow","backgroundColor","color","padding","marginBottom","TrainingPage","data","post","markdownRemark","frontmatter","HTMLContent","html","trainingPageQuery","dangerouslySetInnerHTML","__html"],"mappings":"8FAAA,+JAMaA,EAAuB,SAAC,GAO9B,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,MACAC,EAII,EAJJA,QAEAC,GAEI,EAHJC,YAGI,EAFJD,SAGME,EADF,EADJC,kBAEwCC,IACxC,OACE,yBAAKC,UAAU,WACb,yBACEA,UAAU,0CACVC,MAAO,CACLC,gBAAgB,QACZV,EAAMW,gBAAkBX,EAAMW,gBAAgBC,MAAMC,IAAMb,GAD/C,IAGfc,mBAAmB,kBAGrB,wBACEN,UAAU,iCACVC,MAAO,CACLM,UAAW,0CACXC,gBAAiB,UACjBC,MAAO,QACPC,QAAS,OACTC,aAAc,MAGflB,IAGL,6BAASO,UAAU,6BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,sCAAsCN,GACpD,kBAACG,EAAD,CAAaG,UAAU,UAAUL,QAASA,WA8C3CiB,UA3BM,SAAC,GAAc,IAAD,EAAXC,EAAW,EAAXA,KACEC,EAASD,EAAzBE,eACAC,EAAgBH,EAAKE,eAArBC,YAER,OACE,kBAAC,IAAD,KACE,kBAACzB,IAAD,GACEC,MAAOwB,EAAYxB,MACnBC,MAAOuB,EAAYvB,MACnBC,QAASsB,EAAYtB,QACrBE,YAAaoB,EAAYpB,YACzBE,iBAAkBmB,MALpB,MAMSH,EAAKE,YAAYvB,MAN1B,EAOEE,QAASmB,EAAKI,KAPhB,MAuBC,IAAMC,EAAiB,c,kCC7F9B,2DAGaF,EAAc,SAAC,GAAD,IAAGtB,EAAH,EAAGA,QAASK,EAAZ,EAAYA,UAAZ,OACzB,yBAAKA,UAAWA,EAAWoB,wBAAyB,CAAEC,OAAQ1B,MAcjDI,IAXC,SAAC,GAAD,IAAGJ,EAAH,EAAGA,QAASK,EAAZ,EAAYA,UAAZ,OACd,yBAAKA,UAAWA,GAAYL","file":"component---src-templates-training-page-js-a8b6139b75828668ba2e.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../components/Layout'\r\nimport Content, { HTMLContent } from '../components/Content'\r\n\r\nexport const TrainingPageTemplate = ({\r\n  image,\r\n  title,\r\n  heading,\r\n  description,\r\n  content, \r\n  contentComponent,\r\n}) => {\r\n  const PageContent = contentComponent || Content\r\n  return (\r\n    <div className=\"content\">\r\n      <div\r\n        className=\"full-width-image-container margin-top-0\"\r\n        style={{\r\n          backgroundImage: `url(${\r\n            !!image.childImageSharp ? image.childImageSharp.fluid.src : image\r\n          })`,\r\n          backgroundPosition: `center center`,\r\n        }}\r\n      >\r\n        <h1\r\n          className=\"has-text-weight-bold is-size-1\"\r\n          style={{\r\n            boxShadow: '0.5rem 0 0 #d02126, -0.5rem 0 0 #d02126',\r\n            backgroundColor: '#d02126',\r\n            color: 'white',\r\n            padding: '1rem',\r\n            marginBottom: '0',\r\n          }}\r\n        >\r\n          {title}\r\n        </h1>\r\n      </div>\r\n      <section className=\"section section--gradient\">\r\n        <div className=\"container\">\r\n          <div className=\"section\">\r\n            <div className=\"columns\">\r\n              <div className=\"column is-7 is-offset-1\">\r\n                <h3 className=\"has-text-weight-semibold is-size-2\">{heading}</h3>\r\n                <PageContent className=\"content\" content={content} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nTrainingPageTemplate.propTypes = {\r\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n  title: PropTypes.string,\r\n  heading: PropTypes.string,\r\n  description: PropTypes.string,\r\n  content: PropTypes.string,\r\n  contentComponent: PropTypes.func,\r\n}\r\n\r\nconst TrainingPage = ({ data }) => {\r\n  const { markdownRemark: post } = data\r\n  const { frontmatter } = data.markdownRemark\r\n\r\n  return (\r\n    <Layout>\r\n      <TrainingPageTemplate\r\n        image={frontmatter.image}\r\n        title={frontmatter.title}\r\n        heading={frontmatter.heading}\r\n        description={frontmatter.description}\r\n        contentComponent={HTMLContent}\r\n        title={post.frontmatter.title}\r\n        content={post.html}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nTrainingPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    markdownRemark: PropTypes.shape({\r\n      frontmatter: PropTypes.object,\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default TrainingPage\r\n\r\nexport const trainingPageQuery = graphql`\r\n  query TrainingPage($id: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n        image {\r\n          childImageSharp {\r\n            fluid(maxWidth: 2048, quality: 100) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n        heading\r\n        description\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const HTMLContent = ({ content, className }) => (\r\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\r\n)\r\n\r\nconst Content = ({ content, className }) => (\r\n  <div className={className}>{content}</div>\r\n)\r\n\r\nContent.propTypes = {\r\n  content: PropTypes.node,\r\n  className: PropTypes.string,\r\n}\r\n\r\nHTMLContent.propTypes = Content.propTypes\r\n\r\nexport default Content\r\n"],"sourceRoot":""}